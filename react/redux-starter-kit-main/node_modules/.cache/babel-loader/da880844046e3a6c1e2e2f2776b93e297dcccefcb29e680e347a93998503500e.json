{"ast":null,"code":"var _jsxFileName = \"/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/AddPostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAllUsers, selectUsersById } from '../users/usersSlice';\nimport { useAddPostMutation } from '../../api/apiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddPostForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [userId, setUserId] = useState('');\n  const [addRequestStatus, setAddRequestStatus] = useState('idle');\n  const users = useSelector(selectAllUsers);\n  const dispatch = useDispatch();\n  const [addNewPost, {\n    isLoading\n  }] = useAddPostMutation();\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onAuthorChanged = e => setUserId(e.target.value);\n  const canSave = [title, content, userId].every(Boolean) && !isLoading;\n  const onSavePostClicked = async () => {\n    if (canSave) {\n      try {\n        setAddRequestStatus('pending');\n        await addNewPost({\n          title,\n          content,\n          user: userId\n        }).unwrap();\n        setTitle('');\n        setContent('');\n        setUserId('');\n      } catch (error) {\n        console.log('failed to save the post ', error);\n      } finally {\n        setAddRequestStatus('idle');\n      }\n    }\n\n    //   if (title && content) {\n    //     dispatch(postAdded(title, content, userId))\n\n    //     setTitle('')\n    //     setContent('')\n    //   }\n  };\n\n  const userOptions = users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: user.id,\n    children: user.name\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"add a new post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"post title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"post content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postAuthor\",\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"postAuthor\",\n        value: userId,\n        onChange: onAuthorChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), userOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        disabled: !canSave,\n        children: \"Save post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPostForm, \"5K2Aq8EBmUIknTvK5b4G+DtSjuU=\", false, function () {\n  return [useSelector, useDispatch, useAddPostMutation];\n});\n_c = AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","selectAllUsers","selectUsersById","useAddPostMutation","jsxDEV","_jsxDEV","AddPostForm","_s","title","setTitle","content","setContent","userId","setUserId","addRequestStatus","setAddRequestStatus","users","dispatch","addNewPost","isLoading","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","canSave","every","Boolean","onSavePostClicked","user","unwrap","error","console","log","userOptions","map","id","children","name","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/AddPostForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectAllUsers, selectUsersById } from '../users/usersSlice'\nimport { useAddPostMutation } from '../../api/apiSlice'\n\nexport function AddPostForm() {\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n  const [userId, setUserId] = useState('')\n  const [addRequestStatus, setAddRequestStatus] = useState('idle')\n\n  const users = useSelector(selectAllUsers)\n\n  const dispatch = useDispatch()\n  const [addNewPost, { isLoading }] = useAddPostMutation()\n\n  const onTitleChanged = (e) => setTitle(e.target.value)\n  const onContentChanged = (e) => setContent(e.target.value)\n  const onAuthorChanged = (e) => setUserId(e.target.value)\n\n  const canSave = [title, content, userId].every(Boolean) && !isLoading\n\n  const onSavePostClicked = async () => {\n    if (canSave) {\n      try {\n        setAddRequestStatus('pending')\n        await addNewPost({ title, content, user: userId }).unwrap()\n\n        setTitle('')\n        setContent('')\n        setUserId('')\n      } catch (error) {\n        console.log('failed to save the post ', error)\n      } finally {\n        setAddRequestStatus('idle')\n      }\n    }\n\n    //   if (title && content) {\n    //     dispatch(postAdded(title, content, userId))\n\n    //     setTitle('')\n    //     setContent('')\n    //   }\n  }\n\n  const userOptions = users.map((user) => (\n    <option key={user.id} value={user.id}>\n      {user.name}\n    </option>\n  ))\n\n  return (\n    <section>\n      <h2>add a new post</h2>\n      <form>\n        <label htmlFor=\"postTitle\">post title</label>\n        <input\n          type=\"text\"\n          id=\"postTitle\"\n          name=\"postTitle\"\n          value={title}\n          onChange={onTitleChanged}\n        />\n\n        <label htmlFor=\"postTitle\">post content</label>\n        <input\n          type=\"text\"\n          id=\"postContent\"\n          name=\"postContent\"\n          value={content}\n          onChange={onContentChanged}\n        />\n\n        <label htmlFor=\"postAuthor\">Author:</label>\n        <select id=\"postAuthor\" value={userId} onChange={onAuthorChanged}>\n          <option value=\"\"></option>\n          {userOptions}\n        </select>\n        <button type=\"button\" onClick={onSavePostClicked} disabled={!canSave}>\n          Save post\n        </button>\n      </form>\n    </section>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}