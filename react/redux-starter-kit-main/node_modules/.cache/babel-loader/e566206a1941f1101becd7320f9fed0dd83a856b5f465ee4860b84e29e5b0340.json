{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nexports.__esModule = true;\nexports.spread = void 0;\nvar isObject_1 = require(\"./isObject\");\n/**\n * Clones the given object, preserving its setters/getters.\n */\nfunction spread(source) {\n  var e_1, _a;\n  var target = {};\n  var descriptors = Object.getOwnPropertyDescriptors(source);\n  try {\n    for (var _b = __values(Object.entries(descriptors)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var _d = __read(_c.value, 2),\n        propertyName = _d[0],\n        descriptor = _d[1];\n      // Spread nested objects, preserving their descriptors.\n      if (isObject_1.isObject(descriptor.value)) {\n        Object.defineProperty(target, propertyName, __assign(__assign({}, descriptor), {\n          value: spread(descriptor.value)\n        }));\n        continue;\n      }\n      Object.defineProperty(target, propertyName, descriptor);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return target;\n}\nexports.spread = spread;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}