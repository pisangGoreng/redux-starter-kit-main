{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nimport { sub } from 'date-fns';\nconst initialState = [{\n  id: '1',\n  title: 'first post',\n  content: 'bitcount to the moon',\n  date: sub(new Date(), {\n    minutes: 10\n  }).toISOString()\n}, {\n  id: '2',\n  title: 'second post',\n  content: 'bitcount sdfsdfsf',\n  date: sub(new Date(), {\n    minutes: 5\n  }).toISOString()\n}];\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    reactionAdded: (state, action) => {\n      const {\n        postId,\n        reaction\n      } = action.payload;\n      const existingPost = state.find();\n    },\n    postAdded: {\n      reducer: (state, action) => {\n        state.push(action.payload);\n      },\n      prepare(title, content, userId) {\n        return {\n          payload: {\n            id: nanoid,\n            date: new Date().toISOString(),\n            user: userId,\n            title,\n            content\n          }\n        };\n      }\n    },\n    postUpdated: (state, action) => {\n      const {\n        id,\n        title,\n        content\n      } = action.payload;\n      const existingPost = state.find(post => post.id === id);\n      if (existingPost) {\n        existingPost.title = title;\n        existingPost.content = content;\n      }\n    }\n  }\n});\nexport const {\n  postAdded,\n  postUpdated\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","sub","initialState","id","title","content","date","Date","minutes","toISOString","postsSlice","name","reducers","reactionAdded","state","action","postId","reaction","payload","existingPost","find","postAdded","reducer","push","prepare","userId","user","postUpdated","post","actions"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/postsSlice.js"],"sourcesContent":["import { createSlice, nanoid } from '@reduxjs/toolkit'\nimport { sub } from 'date-fns'\n\nconst initialState = [\n  {\n    id: '1',\n    title: 'first post',\n    content: 'bitcount to the moon',\n    date: sub(new Date(), { minutes: 10 }).toISOString(),\n  },\n  {\n    id: '2',\n    title: 'second post',\n    content: 'bitcount sdfsdfsf',\n    date: sub(new Date(), { minutes: 5 }).toISOString(),\n  },\n]\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    reactionAdded: (state, action) => {\n      const { postId, reaction } = action.payload\n      const existingPost = state.find()\n    },\n    postAdded: {\n      reducer: (state, action) => {\n        state.push(action.payload)\n      },\n      prepare(title, content, userId) {\n        return {\n          payload: {\n            id: nanoid,\n            date: new Date().toISOString(),\n            user: userId,\n            title,\n            content,\n          },\n        }\n      },\n    },\n    postUpdated: (state, action) => {\n      const { id, title, content } = action.payload\n      const existingPost = state.find((post) => post.id === id)\n      if (existingPost) {\n        existingPost.title = title\n        existingPost.content = content\n      }\n    },\n  },\n})\n\nexport const { postAdded, postUpdated } = postsSlice.actions\n\nexport default postsSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AACtD,SAASC,GAAG,QAAQ,UAAU;AAE9B,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,GAAG;EACPC,KAAK,EAAE,YAAY;EACnBC,OAAO,EAAE,sBAAsB;EAC/BC,IAAI,EAAEL,GAAG,CAAC,IAAIM,IAAI,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC,CAACC,WAAW;AACpD,CAAC,EACD;EACEN,EAAE,EAAE,GAAG;EACPC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,mBAAmB;EAC5BC,IAAI,EAAEL,GAAG,CAAC,IAAIM,IAAI,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAE,CAAC,CAAC,CAACC,WAAW;AACnD,CAAC,CACF;AAED,MAAMC,UAAU,GAAGX,WAAW,CAAC;EAC7BY,IAAI,EAAE,OAAO;EACbT,YAAY;EACZU,QAAQ,EAAE;IACRC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAM;QAAEC,MAAM;QAAEC;MAAS,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC3C,MAAMC,YAAY,GAAGL,KAAK,CAACM,IAAI,EAAE;IACnC,CAAC;IACDC,SAAS,EAAE;MACTC,OAAO,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;QAC1BD,KAAK,CAACS,IAAI,CAACR,MAAM,CAACG,OAAO,CAAC;MAC5B,CAAC;MACDM,OAAOA,CAACpB,KAAK,EAAEC,OAAO,EAAEoB,MAAM,EAAE;QAC9B,OAAO;UACLP,OAAO,EAAE;YACPf,EAAE,EAAEH,MAAM;YACVM,IAAI,EAAE,IAAIC,IAAI,EAAE,CAACE,WAAW,EAAE;YAC9BiB,IAAI,EAAED,MAAM;YACZrB,KAAK;YACLC;UACF;QACF,CAAC;MACH;IACF,CAAC;IACDsB,WAAW,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAM;QAAEZ,EAAE;QAAEC,KAAK;QAAEC;MAAQ,CAAC,GAAGU,MAAM,CAACG,OAAO;MAC7C,MAAMC,YAAY,GAAGL,KAAK,CAACM,IAAI,CAAEQ,IAAI,IAAKA,IAAI,CAACzB,EAAE,KAAKA,EAAE,CAAC;MACzD,IAAIgB,YAAY,EAAE;QAChBA,YAAY,CAACf,KAAK,GAAGA,KAAK;QAC1Be,YAAY,CAACd,OAAO,GAAGA,OAAO;MAChC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEgB,SAAS;EAAEM;AAAY,CAAC,GAAGjB,UAAU,CAACmB,OAAO;AAE5D,eAAenB,UAAU,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}