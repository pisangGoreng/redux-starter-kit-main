{"ast":null,"code":"var _jsxFileName = \"/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/PostsList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\nimport { PostAuthor } from './PostAuthor';\nimport { TimeAgo } from './TimeAgo';\nimport { ReactionButtons } from './ReactionButtons';\nimport { selectAllPosts, fetchPosts, selectPostsIds, selectPostsById } from './postsSlice';\nimport { Spinner } from '../../components/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet PostExcerpts = _ref => {\n  _s();\n  let {\n    postId\n  } = _ref;\n  const post = useSelector(state => selectPostsById(state, postId));\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"post-excerpt\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PostAuthor, {\n        userId: post.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimeAgo, {\n        timestamp: post.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-content\",\n      children: post.content.substring(0, 100)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactionButtons, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/posts/${post.id}`,\n      className: \"button muted-button\",\n      children: \"View Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(PostExcerpts, \"ZCrU7oOX7AXdDCQUnV4+qfKeF4w=\", false, function () {\n  return [useSelector];\n});\n_c = PostExcerpts;\nPostExcerpts = /*#__PURE__*/React.memo(PostExcerpts);\nexport function PostsList() {\n  _s2();\n  const posts = useSelector(selectAllPosts);\n  const dispatch = useDispatch();\n  const orderedPostsIds = useSelector(selectPostsIds);\n  const postStatus = useSelector(state => state.posts.status);\n  const error = useSelector(state => state.posts.error);\n  useEffect(() => {\n    if (postStatus === 'idle') {\n      dispatch(fetchPosts());\n    }\n  }, [postStatus, dispatch]);\n  let content;\n  if (postStatus === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(Spinner, {\n      text: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }, this);\n  } else if (postStatus === 'succeeded') {\n    // * sudah di sort di postsSlice -> postsAdapter\n    // const orderesPosts = posts\n    //   .slice()\n    //   .sort((a, b) => b.date.localeCompare(a.date))\n\n    content = orderedPostsIds.map(postId => /*#__PURE__*/_jsxDEV(PostExcerpts, {\n      postId: postId\n    }, postId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this));\n  } else if (postStatus === 'error') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s2(PostsList, \"umQ0AbtXfXB8PwcsJ7Ru14wYCOs=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector, useSelector];\n});\n_c2 = PostsList;\nvar _c, _c2;\n$RefreshReg$(_c, \"PostExcerpts\");\n$RefreshReg$(_c2, \"PostsList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Link","PostAuthor","TimeAgo","ReactionButtons","selectAllPosts","fetchPosts","selectPostsIds","selectPostsById","Spinner","jsxDEV","_jsxDEV","PostExcerpts","_ref","_s","postId","post","state","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","userId","user","timestamp","date","content","substring","to","id","_c","memo","PostsList","_s2","posts","dispatch","orderedPostsIds","postStatus","status","error","text","map","_c2","$RefreshReg$"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/PostsList.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\nimport { PostAuthor } from './PostAuthor'\nimport { TimeAgo } from './TimeAgo'\nimport { ReactionButtons } from './ReactionButtons'\nimport {\n  selectAllPosts,\n  fetchPosts,\n  selectPostsIds,\n  selectPostsById,\n} from './postsSlice'\nimport { Spinner } from '../../components/Spinner'\n\nlet PostExcerpts = ({ postId }) => {\n  const post = useSelector((state) => selectPostsById(state, postId))\n  return (\n    <article className=\"post-excerpt\">\n      <h3>{post.title}</h3>\n      <div>\n        <PostAuthor userId={post.user} />\n        <TimeAgo timestamp={post.date} />\n      </div>\n      <p className=\"post-content\">{post.content.substring(0, 100)}</p>\n      <ReactionButtons post={post} />\n      <Link to={`/posts/${post.id}`} className=\"button muted-button\">\n        View Post\n      </Link>\n    </article>\n  )\n}\nPostExcerpts = React.memo(PostExcerpts)\n\nexport function PostsList() {\n  const posts = useSelector(selectAllPosts)\n  const dispatch = useDispatch()\n  const orderedPostsIds = useSelector(selectPostsIds)\n\n  const postStatus = useSelector((state) => state.posts.status)\n  const error = useSelector((state) => state.posts.error)\n\n  useEffect(() => {\n    if (postStatus === 'idle') {\n      dispatch(fetchPosts())\n    }\n  }, [postStatus, dispatch])\n\n  let content\n  if (postStatus === 'loading') {\n    content = <Spinner text=\"loading...\" />\n  } else if (postStatus === 'succeeded') {\n    // * sudah di sort di postsSlice -> postsAdapter\n    // const orderesPosts = posts\n    //   .slice()\n    //   .sort((a, b) => b.date.localeCompare(a.date))\n\n    content = orderedPostsIds.map((postId) => (\n      <PostExcerpts key={postId} postId={postId} />\n    ))\n  } else if (postStatus === 'error') {\n    content = <div>{error}</div>\n  }\n\n  return (\n    <section className=\"posts-list\">\n      <h2>Posts</h2>\n      {content}\n    </section>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}