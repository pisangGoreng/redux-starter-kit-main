{"ast":null,"code":"var _jsxFileName = \"/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/PostsList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\nimport { PostAuthor } from './PostAuthor';\nimport { TimeAgo } from './TimeAgo';\nimport { ReactionButtons } from './ReactionButtons';\nimport { selectAllPosts, fetchPosts, selectPostsIds, selectPostsById } from './postsSlice';\nimport { Spinner } from '../../components/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet PostExcerpts = _ref => {\n  _s();\n  let {\n    post\n  } = _ref;\n  const posts = useSelector();\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"post-excerpt\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PostAuthor, {\n        userId: post.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimeAgo, {\n        timestamp: post.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-content\",\n      children: post.content.substring(0, 100)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactionButtons, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/posts/${post.id}`,\n      className: \"button muted-button\",\n      children: \"View Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(PostExcerpts, \"6hBbuofx6pBPNuvOg59liqMeVP8=\", false, function () {\n  return [useSelector];\n});\n_c = PostExcerpts;\nPostExcerpts = /*#__PURE__*/React.memo(PostExcerpts);\nexport function PostsList() {\n  _s2();\n  const posts = useSelector(selectAllPosts);\n  const dispatch = useDispatch();\n  const postStatus = useSelector(state => state.posts.status);\n  const error = useSelector(state => state.posts.error);\n  useEffect(() => {\n    if (postStatus === 'idle') {\n      dispatch(fetchPosts());\n    }\n  }, [postStatus, dispatch]);\n  let content;\n  if (postStatus === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(Spinner, {\n      text: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this);\n  } else if (postStatus === 'succeeded') {\n    const orderesPosts = posts.slice().sort((a, b) => b.date.localeCompare(a.date));\n    content = orderesPosts.map(post => /*#__PURE__*/_jsxDEV(PostExcerpts, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this));\n  } else if (postStatus === 'failed') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s2(PostsList, \"qz0DAJ/hAbKJjT8D04+xBveTlGU=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n_c2 = PostsList;\nvar _c, _c2;\n$RefreshReg$(_c, \"PostExcerpts\");\n$RefreshReg$(_c2, \"PostsList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Link","PostAuthor","TimeAgo","ReactionButtons","selectAllPosts","fetchPosts","selectPostsIds","selectPostsById","Spinner","jsxDEV","_jsxDEV","PostExcerpts","_ref","_s","post","posts","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","userId","user","timestamp","date","content","substring","to","id","_c","memo","PostsList","_s2","dispatch","postStatus","state","status","error","text","orderesPosts","slice","sort","a","b","localeCompare","map","_c2","$RefreshReg$"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/PostsList.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\nimport { PostAuthor } from './PostAuthor'\nimport { TimeAgo } from './TimeAgo'\nimport { ReactionButtons } from './ReactionButtons'\nimport {\n  selectAllPosts,\n  fetchPosts,\n  selectPostsIds,\n  selectPostsById,\n} from './postsSlice'\nimport { Spinner } from '../../components/Spinner'\n\nlet PostExcerpts = ({ post }) => {\n  const posts = useSelector()\n  return (\n    <article className=\"post-excerpt\">\n      <h3>{post.title}</h3>\n      <div>\n        <PostAuthor userId={post.user} />\n        <TimeAgo timestamp={post.date} />\n      </div>\n      <p className=\"post-content\">{post.content.substring(0, 100)}</p>\n      <ReactionButtons post={post} />\n      <Link to={`/posts/${post.id}`} className=\"button muted-button\">\n        View Post\n      </Link>\n    </article>\n  )\n}\nPostExcerpts = React.memo(PostExcerpts)\n\nexport function PostsList() {\n  const posts = useSelector(selectAllPosts)\n  const dispatch = useDispatch()\n\n  const postStatus = useSelector((state) => state.posts.status)\n  const error = useSelector((state) => state.posts.error)\n\n  useEffect(() => {\n    if (postStatus === 'idle') {\n      dispatch(fetchPosts())\n    }\n  }, [postStatus, dispatch])\n\n  let content\n  if (postStatus === 'loading') {\n    content = <Spinner text=\"loading...\" />\n  } else if (postStatus === 'succeeded') {\n    const orderesPosts = posts\n      .slice()\n      .sort((a, b) => b.date.localeCompare(a.date))\n\n    content = orderesPosts.map((post) => (\n      <PostExcerpts key={post.id} post={post} />\n    ))\n  } else if (postStatus === 'failed') {\n    content = <div>{error}</div>\n  }\n\n  return (\n    <section className=\"posts-list\">\n      <h2>Posts</h2>\n      {content}\n    </section>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}