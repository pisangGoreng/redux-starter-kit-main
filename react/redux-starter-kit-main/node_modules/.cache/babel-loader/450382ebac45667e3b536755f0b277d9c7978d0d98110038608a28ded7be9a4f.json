{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: '/fakeApi'\n  }),\n  tagTypes: ['Post'],\n  endpoints: builder => ({\n    getPosts: builder.query({\n      query: () => '/posts',\n      providesTags: ['Post'] // save cache dengan tag post\n    }),\n\n    getPost: builder.query({\n      query: postId => `/posts/${postId}`\n    }),\n    addPost: builder.mutation({\n      query: initialPost => ({\n        url: '/posts',\n        method: 'POST',\n        body: initialPost\n      }),\n      invalidatesTags: ['Post'] // otomatis nambah post baru & re render component\n    }),\n\n    editPost: builder.mutation({\n      query: post => ({\n        url: '/posts/${post.id}'\n      })\n    })\n  })\n});\nexport const {\n  useGetPostsQuery,\n  useGetPostQuery,\n  useAddPostMutation\n} = apiSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","apiSlice","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getPosts","query","providesTags","getPost","postId","addPost","mutation","initialPost","url","method","body","invalidatesTags","editPost","post","useGetPostsQuery","useGetPostQuery","useAddPostMutation"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/api/apiSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({ baseUrl: '/fakeApi' }),\n  tagTypes: ['Post'],\n  endpoints: (builder) => ({\n    getPosts: builder.query({\n      query: () => '/posts',\n      providesTags: ['Post'], // save cache dengan tag post\n    }),\n    getPost: builder.query({\n      query: (postId) => `/posts/${postId}`,\n    }),\n    addPost: builder.mutation({\n      query: (initialPost) => ({\n        url: '/posts',\n        method: 'POST',\n        body: initialPost,\n      }),\n      invalidatesTags: ['Post'], // otomatis nambah post baru & re render component\n    }),\n    editPost: builder.mutation({\n      query: (post) => ({\n        url: '/posts/${post.id}',\n      }),\n    }),\n  }),\n})\n\nexport const { useGetPostsQuery, useGetPostQuery, useAddPostMutation } =\n  apiSlice\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,KAAK;EAClBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAW,CAAC,CAAC;EAClDC,QAAQ,EAAE,CAAC,MAAM,CAAC;EAClBC,SAAS,EAAGC,OAAO,KAAM;IACvBC,QAAQ,EAAED,OAAO,CAACE,KAAK,CAAC;MACtBA,KAAK,EAAEA,CAAA,KAAM,QAAQ;MACrBC,YAAY,EAAE,CAAC,MAAM,CAAC,CAAE;IAC1B,CAAC,CAAC;;IACFC,OAAO,EAAEJ,OAAO,CAACE,KAAK,CAAC;MACrBA,KAAK,EAAGG,MAAM,IAAM,UAASA,MAAO;IACtC,CAAC,CAAC;IACFC,OAAO,EAAEN,OAAO,CAACO,QAAQ,CAAC;MACxBL,KAAK,EAAGM,WAAW,KAAM;QACvBC,GAAG,EAAE,QAAQ;QACbC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC,CAAC;MACFI,eAAe,EAAE,CAAC,MAAM,CAAC,CAAE;IAC7B,CAAC,CAAC;;IACFC,QAAQ,EAAEb,OAAO,CAACO,QAAQ,CAAC;MACzBL,KAAK,EAAGY,IAAI,KAAM;QAChBL,GAAG,EAAE;MACP,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEM,gBAAgB;EAAEC,eAAe;EAAEC;AAAmB,CAAC,GACpEvB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}