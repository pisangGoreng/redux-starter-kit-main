{"ast":null,"code":"var _jsxFileName = \"/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/SinglePostPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\nimport { PostAuthor } from './PostAuthor';\nimport { TimeAgo } from './TimeAgo';\nimport { selectPostsById } from './postsSlice';\nimport { useGetPostQuery } from '../../api/apiSlice';\nimport { Spinner } from '../../components/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SinglePostPage(_ref) {\n  _s();\n  let {\n    match\n  } = _ref;\n  const {\n    postId\n  } = match.params;\n  const {\n    data: post,\n    isFetching,\n    isSuccess\n  } = useGetPostQuery(postId);\n  let content;\n  if (isFetching) {\n    content = /*#__PURE__*/_jsxDEV(Spinner, {\n      text: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 15\n    }, this);\n  } else if (isSuccess) {\n    content = /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PostAuthor, {\n          userId: post.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-content\",\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/editPost/${post.id}`,\n        className: \"button\",\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(TimeAgo, {\n          timestamp: post.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n_s(SinglePostPage, \"WadP603jH459sOjXjCJrhsN8A8U=\", false, function () {\n  return [useGetPostQuery];\n});\n_c = SinglePostPage;\nvar _c;\n$RefreshReg$(_c, \"SinglePostPage\");","map":{"version":3,"names":["React","useSelector","Link","PostAuthor","TimeAgo","selectPostsById","useGetPostQuery","Spinner","jsxDEV","_jsxDEV","SinglePostPage","_ref","_s","match","postId","params","data","post","isFetching","isSuccess","content","text","fileName","_jsxFileName","lineNumber","columnNumber","className","children","title","userId","user","to","id","timestamp","date","_c","$RefreshReg$"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/SinglePostPage.js"],"sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\nimport { PostAuthor } from './PostAuthor'\nimport { TimeAgo } from './TimeAgo'\nimport { selectPostsById } from './postsSlice'\nimport { useGetPostQuery } from '../../api/apiSlice'\nimport { Spinner } from '../../components/Spinner'\n\nexport function SinglePostPage({ match }) {\n  const { postId } = match.params\n  const { data: post, isFetching, isSuccess } = useGetPostQuery(postId)\n\n  let content\n  if (isFetching) {\n    content = <Spinner text=\"Loading...\" />\n  } else if (isSuccess) {\n    content = (\n      <article className=\"post\">\n        <h2>{post.title}</h2>\n        <div>\n          <PostAuthor userId={post.user} />\n        </div>\n        <p className=\"post-content\">{post.content}</p>\n\n        <Link to={`/editPost/${post.id}`} className=\"button\">\n          Edit Post\n        </Link>\n\n        <p>\n          <TimeAgo timestamp={post.date} />\n        </p>\n      </article>\n    )\n  }\n\n  return <section>{content}</section>\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,IAAI,QAAQ,2CAA2C;AAChE,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,eAAe,QAAQ,cAAc;AAC9C,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,OAAO,QAAQ,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,SAASC,cAAcA,CAAAC,IAAA,EAAY;EAAAC,EAAA;EAAA,IAAX;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACtC,MAAM;IAAEG;EAAO,CAAC,GAAGD,KAAK,CAACE,MAAM;EAC/B,MAAM;IAAEC,IAAI,EAAEC,IAAI;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAGb,eAAe,CAACQ,MAAM,CAAC;EAErE,IAAIM,OAAO;EACX,IAAIF,UAAU,EAAE;IACdE,OAAO,gBAAGX,OAAA,CAACF,OAAO;MAACc,IAAI,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACzC,CAAC,MAAM,IAAIN,SAAS,EAAE;IACpBC,OAAO,gBACLX,OAAA;MAASiB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACvBlB,OAAA;QAAAkB,QAAA,EAAKV,IAAI,CAACW;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACrBhB,OAAA;QAAAkB,QAAA,eACElB,OAAA,CAACN,UAAU;UAAC0B,MAAM,EAAEZ,IAAI,CAACa;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7B,eACNhB,OAAA;QAAGiB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEV,IAAI,CAACG;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAE9ChB,OAAA,CAACP,IAAI;QAAC6B,EAAE,EAAG,aAAYd,IAAI,CAACe,EAAG,EAAE;QAACN,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAErD;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAEPhB,OAAA;QAAAkB,QAAA,eACElB,OAAA,CAACL,OAAO;UAAC6B,SAAS,EAAEhB,IAAI,CAACiB;QAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEP;EACH;EAEA,oBAAOhB,OAAA;IAAAkB,QAAA,EAAUP;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAW;AACrC;AAACb,EAAA,CA5BeF,cAAc;EAAA,QAEkBJ,eAAe;AAAA;AAAA6B,EAAA,GAF/CzB,cAAc;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}