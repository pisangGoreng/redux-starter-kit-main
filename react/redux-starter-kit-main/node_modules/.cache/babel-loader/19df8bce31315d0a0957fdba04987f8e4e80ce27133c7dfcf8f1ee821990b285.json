{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { client } from '../../api/client';\nconst initialState = {\n  users: []\n};\nconst fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n  const response = await client.get('/fakeApi/users');\n  return response.data;\n});\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(fetchUsers.fulfilled, (state, action) => {});\n  }\n});\nexport default usersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","client","initialState","users","fetchUsers","response","get","data","usersSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","reducer"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/users/usersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { client } from '../../api/client'\n\nconst initialState = {\n  users: [],\n}\n\nconst fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n  const response = await client.get('/fakeApi/users')\n  return response.data\n})\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(fetchUsers.fulfilled, (state, action) => {})\n  },\n})\n\nexport default usersSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,MAAM,QAAQ,kBAAkB;AAEzC,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,UAAU,GAAGJ,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EAClE,MAAMK,QAAQ,GAAG,MAAMJ,MAAM,CAACK,GAAG,CAAC,gBAAgB,CAAC;EACnD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGT,WAAW,CAAC;EAC7BU,IAAI,EAAE,OAAO;EACbP,YAAY;EACZQ,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAaA,CAACC,OAAO,EAAE;IACrBA,OAAO,CAACC,OAAO,CAACT,UAAU,CAACU,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK,CAAC,CAAC,CAAC;EAC9D;AACF,CAAC,CAAC;AAEF,eAAeR,UAAU,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}