{"ast":null,"code":"var _jsxFileName = \"/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/PostsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo } from 'react';\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\nimport { PostAuthor } from './PostAuthor';\nimport { TimeAgo } from './TimeAgo';\nimport { ReactionButtons } from './ReactionButtons';\nimport classnames from 'classnames';\nimport { Spinner } from '../../components/Spinner';\nimport { useGetPostsQuery } from '../../api/apiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet PostExcerpts = _ref => {\n  let {\n    post\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"post-excerpt\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PostAuthor, {\n        userId: post.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimeAgo, {\n        timestamp: post.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-content\",\n      children: post.content.substring(0, 100)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactionButtons, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/posts/${post.id}`,\n      className: \"button muted-button\",\n      children: \"View Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = PostExcerpts;\nPostExcerpts = /*#__PURE__*/React.memo(PostExcerpts);\nexport function PostsList() {\n  _s();\n  const {\n    data: posts = [],\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n    isFetching,\n    refetch\n  } = useGetPostsQuery();\n\n  // * bikin element re render hanya element yg berubah aja. bukan semua element\n  const sortedPosts = useMemo(() => {\n    const sortedPosts = posts.slice();\n    sortedPosts.sort((a, b) => b.date.localeCompare(a.date));\n    return sortedPosts;\n  });\n  let content;\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(Spinner, {\n      text: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this);\n  } else if (isSuccess) {\n    renderedPosts = sortedPosts.map(post => /*#__PURE__*/_jsxDEV(PostExcerpts, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this));\n    const containerClassname = classnames('post-container', {\n      disabled: isFetching\n    });\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: containerClassname,\n      children: renderedPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this);\n  } else if (isError) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(PostsList, \"UNMJkgvfU8jWjoCdp8VtcXAcClg=\", false, function () {\n  return [useGetPostsQuery];\n});\n_c2 = PostsList;\nvar _c, _c2;\n$RefreshReg$(_c, \"PostExcerpts\");\n$RefreshReg$(_c2, \"PostsList\");","map":{"version":3,"names":["React","useEffect","useMemo","Link","PostAuthor","TimeAgo","ReactionButtons","classnames","Spinner","useGetPostsQuery","jsxDEV","_jsxDEV","PostExcerpts","_ref","post","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","userId","user","timestamp","date","content","substring","to","id","_c","memo","PostsList","_s","data","posts","isLoading","isSuccess","isError","error","isFetching","refetch","sortedPosts","slice","sort","a","b","localeCompare","text","renderedPosts","map","containerClassname","disabled","_c2","$RefreshReg$"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/PostsList.js"],"sourcesContent":["import React, { useEffect, useMemo } from 'react'\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\nimport { PostAuthor } from './PostAuthor'\nimport { TimeAgo } from './TimeAgo'\nimport { ReactionButtons } from './ReactionButtons'\nimport classnames from 'classnames'\n\nimport { Spinner } from '../../components/Spinner'\nimport { useGetPostsQuery } from '../../api/apiSlice'\n\nlet PostExcerpts = ({ post }) => {\n  return (\n    <article className=\"post-excerpt\" key={post.id}>\n      <h3>{post.title}</h3>\n      <div>\n        <PostAuthor userId={post.user} />\n        <TimeAgo timestamp={post.date} />\n      </div>\n      <p className=\"post-content\">{post.content.substring(0, 100)}</p>\n      <ReactionButtons post={post} />\n      <Link to={`/posts/${post.id}`} className=\"button muted-button\">\n        View Post\n      </Link>\n    </article>\n  )\n}\nPostExcerpts = React.memo(PostExcerpts)\n\nexport function PostsList() {\n  const {\n    data: posts = [],\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n    isFetching,\n    refetch,\n  } = useGetPostsQuery()\n\n  // * bikin element re render hanya element yg berubah aja. bukan semua element\n  const sortedPosts = useMemo(() => {\n    const sortedPosts = posts.slice()\n    sortedPosts.sort((a, b) => b.date.localeCompare(a.date))\n    return sortedPosts\n  })\n\n  let content\n  if (isLoading) {\n    content = <Spinner text=\"loading...\" />\n  } else if (isSuccess) {\n    renderedPosts = sortedPosts.map((post) => (\n      <PostExcerpts key={post.id} post={post} />\n    ))\n    const containerClassname = classnames('post-container', {\n      disabled: isFetching,\n    })\n    content = <div className={containerClassname}>{renderedPosts}</div>\n  } else if (isError) {\n    content = <div>{error}</div>\n  }\n\n  return (\n    <section className=\"posts-list\">\n      <h2>Posts</h2>\n      {content}\n    </section>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}