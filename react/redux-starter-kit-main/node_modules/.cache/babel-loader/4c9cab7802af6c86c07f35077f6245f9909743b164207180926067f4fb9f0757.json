{"ast":null,"code":"var _jsxFileName = \"/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/EditPostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport { postUpdated, selectPostsById } from './postsSlice';\nimport { useEditPostMutation, useGetPostQuery } from '../../api/apiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EditPostForm(_ref) {\n  _s();\n  let {\n    match\n  } = _ref;\n  const {\n    postId\n  } = match.params;\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // const post = useSelector((state) => selectPostsById(state, postId))\n  const {\n    data: post\n  } = useGetPostQuery(postId);\n  const [updatePost, {\n    isLoading\n  }] = useEditPostMutation();\n  const [title, setTitle] = useState(post.title);\n  const [content, setContent] = useState(post.content);\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onSavePostClicked = async () => {\n    if (title && content) {\n      await updatePost({\n        id: postId,\n        title,\n        content\n      });\n      history.push(`/posts/${postId}`);\n      setTitle('');\n      setContent('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit a post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"post title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"post content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        children: \"Save post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(EditPostForm, \"ovlF2AC/v+CS/FlfchrbkIIqsB0=\", false, function () {\n  return [useDispatch, useHistory, useGetPostQuery, useEditPostMutation];\n});\n_c = EditPostForm;\nvar _c;\n$RefreshReg$(_c, \"EditPostForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useHistory","postUpdated","selectPostsById","useEditPostMutation","useGetPostQuery","jsxDEV","_jsxDEV","EditPostForm","_ref","_s","match","postId","params","dispatch","history","data","post","updatePost","isLoading","title","setTitle","content","setContent","onTitleChanged","e","target","value","onContentChanged","onSavePostClicked","id","push","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/EditPostForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\nimport { postUpdated, selectPostsById } from './postsSlice'\nimport { useEditPostMutation, useGetPostQuery } from '../../api/apiSlice'\n\nexport function EditPostForm({ match }) {\n  const { postId } = match.params\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  // const post = useSelector((state) => selectPostsById(state, postId))\n  const { data: post } = useGetPostQuery(postId)\n  const [updatePost, { isLoading }] = useEditPostMutation()\n\n  const [title, setTitle] = useState(post.title)\n  const [content, setContent] = useState(post.content)\n\n  const onTitleChanged = (e) => setTitle(e.target.value)\n  const onContentChanged = (e) => setContent(e.target.value)\n  const onSavePostClicked = async () => {\n    if (title && content) {\n      await updatePost({\n        id: postId,\n        title,\n        content,\n      })\n      history.push(`/posts/${postId}`)\n      setTitle('')\n      setContent('')\n    }\n  }\n\n  return (\n    <section>\n      <h2>Edit a post</h2>\n      <form>\n        <label htmlFor=\"postTitle\">post title</label>\n        <input\n          type=\"text\"\n          id=\"postTitle\"\n          name=\"postTitle\"\n          value={title}\n          onChange={onTitleChanged}\n        />\n\n        <label htmlFor=\"postTitle\">post content</label>\n        <input\n          type=\"text\"\n          id=\"postContent\"\n          name=\"postContent\"\n          value={content}\n          onChange={onContentChanged}\n        />\n\n        <button type=\"button\" onClick={onSavePostClicked}>\n          Save post\n        </button>\n      </form>\n    </section>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}