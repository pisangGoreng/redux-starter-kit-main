{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nexports.__esModule = true;\nexports.generateRestHandlers = exports.parseQueryParams = exports.withErrors = exports.getResponseStatusByErrorType = exports.createUrlBuilder = void 0;\nvar pluralize_1 = __importDefault(require(\"pluralize\"));\nvar msw_1 = require(\"msw\");\nvar OperationError_1 = require(\"../errors/OperationError\");\nvar findPrimaryKey_1 = require(\"../utils/findPrimaryKey\");\nvar HTTPErrorType;\n(function (HTTPErrorType) {\n  HTTPErrorType[HTTPErrorType[\"BadRequest\"] = 0] = \"BadRequest\";\n})(HTTPErrorType || (HTTPErrorType = {}));\nvar ErrorType = __assign(__assign({}, HTTPErrorType), OperationError_1.OperationErrorType);\nvar HTTPError = /** @class */function (_super) {\n  __extends(HTTPError, _super);\n  function HTTPError(type, message) {\n    var _this = _super.call(this, type, message) || this;\n    _this.name = 'HTTPError';\n    return _this;\n  }\n  return HTTPError;\n}(OperationError_1.OperationError);\nfunction createUrlBuilder(baseUrl) {\n  return function (path) {\n    var url = new URL(path, baseUrl || 'http://localhost');\n    return baseUrl ? url.toString() : url.pathname;\n  };\n}\nexports.createUrlBuilder = createUrlBuilder;\nfunction getResponseStatusByErrorType(error) {\n  switch (error.type) {\n    case ErrorType.EntityNotFound:\n      return 404;\n    case ErrorType.DuplicatePrimaryKey:\n      return 409;\n    case ErrorType.BadRequest:\n      return 400;\n    default:\n      return 500;\n  }\n}\nexports.getResponseStatusByErrorType = getResponseStatusByErrorType;\nfunction withErrors(handler) {\n  return function (req, res, ctx) {\n    try {\n      return handler(req, res, ctx);\n    } catch (error) {\n      return res(ctx.status(getResponseStatusByErrorType(error)), ctx.json({\n        message: error.message\n      }));\n    }\n  };\n}\nexports.withErrors = withErrors;\nfunction parseQueryParams(modelName, definition, searchParams) {\n  var paginationKeys = ['cursor', 'skip', 'take'];\n  var cursor = searchParams.get('cursor');\n  var rawSkip = searchParams.get('skip');\n  var rawTake = searchParams.get('take');\n  var filters = {};\n  var skip = rawSkip == null ? rawSkip : parseInt(rawSkip, 10);\n  var take = rawTake == null ? rawTake : parseInt(rawTake, 10);\n  searchParams.forEach(function (value, key) {\n    if (paginationKeys.includes(key)) {\n      return;\n    }\n    if (definition[key]) {\n      filters[key] = {\n        equals: value\n      };\n    } else {\n      throw new HTTPError(HTTPErrorType.BadRequest, \"Failed to query the \\\"\" + modelName + \"\\\" model: unknown property \\\"\" + key + \"\\\".\");\n    }\n  });\n  return {\n    cursor: cursor,\n    skip: skip,\n    take: take,\n    filters: filters\n  };\n}\nexports.parseQueryParams = parseQueryParams;\nfunction generateRestHandlers(modelName, modelDefinition, model, baseUrl) {\n  if (baseUrl === void 0) {\n    baseUrl = '';\n  }\n  var primaryKey = findPrimaryKey_1.findPrimaryKey(modelDefinition);\n  var primaryKeyValue = modelDefinition[primaryKey].getPrimaryKeyValue();\n  var modelPath = pluralize_1[\"default\"](modelName);\n  var buildUrl = createUrlBuilder(baseUrl);\n  function extractPrimaryKey(params) {\n    var parameterValue = params[primaryKey];\n    return typeof primaryKeyValue === 'number' ? Number(parameterValue) : parameterValue;\n  }\n  return [msw_1.rest.get(buildUrl(modelPath), withErrors(function (req, res, ctx) {\n    var _a = parseQueryParams(modelName, modelDefinition, req.url.searchParams),\n      skip = _a.skip,\n      take = _a.take,\n      cursor = _a.cursor,\n      filters = _a.filters;\n    var options = {\n      where: filters\n    };\n    if (take || skip) {\n      options = Object.assign(options, {\n        take: take,\n        skip: skip\n      });\n    }\n    if (take || cursor) {\n      options = Object.assign(options, {\n        take: take,\n        cursor: cursor\n      });\n    }\n    var records = model.findMany(options);\n    return res(ctx.json(records));\n  })), msw_1.rest.get(buildUrl(modelPath + \"/:\" + primaryKey), withErrors(function (req, res, ctx) {\n    var _a;\n    var id = extractPrimaryKey(req.params);\n    var where = (_a = {}, _a[primaryKey] = {\n      equals: id\n    }, _a);\n    var entity = model.findFirst({\n      strict: true,\n      where: where\n    });\n    return res(ctx.json(entity));\n  })), msw_1.rest.post(buildUrl(modelPath), withErrors(function (req, res, ctx) {\n    var createdEntity = model.create(req.body);\n    return res(ctx.status(201), ctx.json(createdEntity));\n  })), msw_1.rest.put(buildUrl(modelPath + \"/:\" + primaryKey), withErrors(function (req, res, ctx) {\n    var _a;\n    var id = extractPrimaryKey(req.params);\n    var where = (_a = {}, _a[primaryKey] = {\n      equals: id\n    }, _a);\n    var updatedEntity = model.update({\n      strict: true,\n      where: where,\n      data: req.body\n    });\n    return res(ctx.json(updatedEntity));\n  })), msw_1.rest[\"delete\"](buildUrl(modelPath + \"/:\" + primaryKey), withErrors(function (req, res, ctx) {\n    var _a;\n    var id = extractPrimaryKey(req.params);\n    var where = (_a = {}, _a[primaryKey] = {\n      equals: id\n    }, _a);\n    var deletedEntity = model[\"delete\"]({\n      strict: true,\n      where: where\n    });\n    return res(ctx.json(deletedEntity));\n  }))];\n}\nexports.generateRestHandlers = generateRestHandlers;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}