{"ast":null,"code":"/**\r\n * Sets a raw response body. Does not append any `Content-Type` headers.\r\n * @example\r\n * res(ctx.body('Successful response'))\r\n * res(ctx.body(JSON.stringify({ key: 'value' })))\r\n * @see {@link https://mswjs.io/docs/api/context/body `ctx.body()`}\r\n */\nconst body = value => {\n  return res => {\n    res.body = value;\n    return res;\n  };\n};\n\n/**\r\n * Sets a textual response body. Appends a `Content-Type: text/plain`\r\n * header on the mocked response.\r\n * @example res(ctx.text('Successful response'))\r\n * @see {@link https://mswjs.io/docs/api/context/text `ctx.text()`}\r\n */\nconst text = body => {\n  return res => {\n    res.headers.set('Content-Type', 'text/plain');\n    res.body = body;\n    return res;\n  };\n};\n\n/**\r\n * Sets an XML response body. Appends a `Content-Type: text/xml` header\r\n * on the mocked response.\r\n * @example\r\n * res(ctx.xml('<node key=\"value\">Content</node>'))\r\n * @see {@link https://mswjs.io/docs/api/context/xml `ctx.xml()`}\r\n */\nconst xml = body => {\n  return res => {\n    res.headers.set('Content-Type', 'text/xml');\n    res.body = body;\n    return res;\n  };\n};\nexport { body as b, text as t, xml as x };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}