{"ast":null,"code":"var _jsxFileName = \"/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/AddPostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postAdded, addNewPost } from './postsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddPostForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [userId, setUserId] = useState('');\n  const users = useSelector(state => state.users);\n  const dispatch = useDispatch();\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onAuthorChanged = e => setUserId(e.target.value);\n  const cantSave = [title, content, userId].every(Boolean) && addRequestStatus === 'idle';\n  const onSavePostClicked = () => {\n    if (canSave) {\n      try {\n        setAddRequestStatus('pending');\n      } catch (error) {}\n    }\n    if (title && content) {\n      dispatch(postAdded(title, content, userId));\n      setTitle('');\n      setContent('');\n    }\n  };\n  const userOptions = users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: user.id,\n    children: user.name\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"add a new post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"post title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"post content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postAuthor\",\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"postAuthor\",\n        value: userId,\n        onChange: onAuthorChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), userOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        disabled: !canSave,\n        children: \"Save post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPostForm, \"1LUYFtI05n/zCSEi0PrL1hUpBQc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","postAdded","addNewPost","jsxDEV","_jsxDEV","AddPostForm","_s","title","setTitle","content","setContent","userId","setUserId","users","state","dispatch","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","cantSave","every","Boolean","addRequestStatus","onSavePostClicked","canSave","setAddRequestStatus","error","userOptions","map","user","id","children","name","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/AddPostForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { postAdded, addNewPost } from './postsSlice'\n\nexport function AddPostForm() {\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n  const [userId, setUserId] = useState('')\n\n  const users = useSelector((state) => state.users)\n\n  const dispatch = useDispatch()\n\n  const onTitleChanged = (e) => setTitle(e.target.value)\n  const onContentChanged = (e) => setContent(e.target.value)\n  const onAuthorChanged = (e) => setUserId(e.target.value)\n\n  const cantSave =\n    [title, content, userId].every(Boolean) && addRequestStatus === 'idle'\n\n  const onSavePostClicked = () => {\n    if (canSave) {\n      try {\n        setAddRequestStatus('pending')\n      } catch (error) {}\n    }\n    if (title && content) {\n      dispatch(postAdded(title, content, userId))\n\n      setTitle('')\n      setContent('')\n    }\n  }\n\n  const userOptions = users.map((user) => (\n    <option key={user.id} value={user.id}>\n      {user.name}\n    </option>\n  ))\n\n  return (\n    <section>\n      <h2>add a new post</h2>\n      <form>\n        <label htmlFor=\"postTitle\">post title</label>\n        <input\n          type=\"text\"\n          id=\"postTitle\"\n          name=\"postTitle\"\n          value={title}\n          onChange={onTitleChanged}\n        />\n\n        <label htmlFor=\"postTitle\">post content</label>\n        <input\n          type=\"text\"\n          id=\"postContent\"\n          name=\"postContent\"\n          value={content}\n          onChange={onContentChanged}\n        />\n\n        <label htmlFor=\"postAuthor\">Author:</label>\n        <select id=\"postAuthor\" value={userId} onChange={onAuthorChanged}>\n          <option value=\"\"></option>\n          {userOptions}\n        </select>\n        <button type=\"button\" onClick={onSavePostClicked} disabled={!canSave}>\n          Save post\n        </button>\n      </form>\n    </section>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,UAAU,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,OAAO,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMe,KAAK,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EAEjD,MAAME,QAAQ,GAAGhB,WAAW,EAAE;EAE9B,MAAMiB,cAAc,GAAIC,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACtD,MAAMC,gBAAgB,GAAIH,CAAC,IAAKP,UAAU,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1D,MAAME,eAAe,GAAIJ,CAAC,IAAKL,SAAS,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAExD,MAAMG,QAAQ,GACZ,CAACf,KAAK,EAAEE,OAAO,EAAEE,MAAM,CAAC,CAACY,KAAK,CAACC,OAAO,CAAC,IAAIC,gBAAgB,KAAK,MAAM;EAExE,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIC,OAAO,EAAE;MACX,IAAI;QACFC,mBAAmB,CAAC,SAAS,CAAC;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE,CAAC;IACnB;IACA,IAAItB,KAAK,IAAIE,OAAO,EAAE;MACpBM,QAAQ,CAACd,SAAS,CAACM,KAAK,EAAEE,OAAO,EAAEE,MAAM,CAAC,CAAC;MAE3CH,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,MAAMoB,WAAW,GAAGjB,KAAK,CAACkB,GAAG,CAAEC,IAAI,iBACjC5B,OAAA;IAAsBe,KAAK,EAAEa,IAAI,CAACC,EAAG;IAAAC,QAAA,EAClCF,IAAI,CAACG;EAAI,GADCH,IAAI,CAACC,EAAE;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGrB,CAAC;EAEF,oBACEnC,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACvBnC,OAAA;MAAA8B,QAAA,gBACE9B,OAAA;QAAOoC,OAAO,EAAC,WAAW;QAAAN,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC7CnC,OAAA;QACEqC,IAAI,EAAC,MAAM;QACXR,EAAE,EAAC,WAAW;QACdE,IAAI,EAAC,WAAW;QAChBhB,KAAK,EAAEZ,KAAM;QACbmC,QAAQ,EAAE1B;MAAe;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzB,eAEFnC,OAAA;QAAOoC,OAAO,EAAC,WAAW;QAAAN,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC/CnC,OAAA;QACEqC,IAAI,EAAC,MAAM;QACXR,EAAE,EAAC,aAAa;QAChBE,IAAI,EAAC,aAAa;QAClBhB,KAAK,EAAEV,OAAQ;QACfiC,QAAQ,EAAEtB;MAAiB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3B,eAEFnC,OAAA;QAAOoC,OAAO,EAAC,YAAY;QAAAN,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC3CnC,OAAA;QAAQ6B,EAAE,EAAC,YAAY;QAACd,KAAK,EAAER,MAAO;QAAC+B,QAAQ,EAAErB,eAAgB;QAAAa,QAAA,gBAC/D9B,OAAA;UAAQe,KAAK,EAAC;QAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAU,EACzBT,WAAW;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACL,eACTnC,OAAA;QAAQqC,IAAI,EAAC,QAAQ;QAACE,OAAO,EAAEjB,iBAAkB;QAACkB,QAAQ,EAAE,CAACjB,OAAQ;QAAAO,QAAA,EAAC;MAEtE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd;AAACjC,EAAA,CArEeD,WAAW;EAAA,QAKXL,WAAW,EAERD,WAAW;AAAA;AAAA8C,EAAA,GAPdxC,WAAW;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}