{"ast":null,"code":"var _jsxFileName = \"/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/AddPostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { postAdded } from './postsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddPostForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"add a new post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"post title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"post content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Save post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPostForm, \"OTvljkGZ3oDHjpEqZRGoAyVoe2c=\");\n_c = AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["React","useState","nanoid","useDispatch","postAdded","jsxDEV","_jsxDEV","AddPostForm","_s","title","setTitle","content","setContent","onTitleChanged","e","target","value","onContentChanged","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","onChange","_c","$RefreshReg$"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/AddPostForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { nanoid } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport { postAdded } from './postsSlice'\n\nexport function AddPostForm() {\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n\n  const onTitleChanged = (e) => setTitle(e.target.value)\n  const onContentChanged = (e) => setContent(e.target.value)\n\n  return (\n    <section>\n      <h2>add a new post</h2>\n      <form>\n        <label htmlFor=\"postTitle\">post title</label>\n        <input\n          type=\"text\"\n          id=\"postTitle\"\n          name=\"postTitle\"\n          value={title}\n          onChange={onTitleChanged}\n        />\n\n        <label htmlFor=\"postTitle\">post content</label>\n        <input\n          type=\"text\"\n          id=\"postContent\"\n          name=\"postContent\"\n          value={content}\n          onChange={onContentChanged}\n        />\n\n        <button type=\"button\">Save post</button>\n      </form>\n    </section>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,cAAc,GAAIC,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACtD,MAAMC,gBAAgB,GAAIH,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAE1D,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACvBhB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAOiB,OAAO,EAAC,WAAW;QAAAL,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC7ChB,OAAA;QACEkB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,WAAW;QACdC,IAAI,EAAC,WAAW;QAChBV,KAAK,EAAEP,KAAM;QACbkB,QAAQ,EAAEd;MAAe;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzB,eAEFhB,OAAA;QAAOiB,OAAO,EAAC,WAAW;QAAAL,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC/ChB,OAAA;QACEkB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,aAAa;QAChBC,IAAI,EAAC,aAAa;QAClBV,KAAK,EAAEL,OAAQ;QACfgB,QAAQ,EAAEV;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3B,eAEFhB,OAAA;QAAQkB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd;AAACd,EAAA,CAjCeD,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}