{"ast":null,"code":"var _jsxFileName = \"/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/EditPostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport { postUpdated, selectPostsById } from './postsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EditPostForm(_ref) {\n  _s();\n  let {\n    match\n  } = _ref;\n  const {\n    postId\n  } = match.params;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const post = useSelector(state => state.posts.find(post => post.id === postId));\n  const [title, setTitle] = useState(post.title);\n  const [content, setContent] = useState(post.content);\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postUpdated({\n        id: postId,\n        title,\n        content\n      }));\n      history.push(`/posts/${postId}`);\n      setTitle('');\n      setContent('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit a post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"post title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"post content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        children: \"Save post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(EditPostForm, \"+klVFv835pxPQaRJuDincaD9374=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n_c = EditPostForm;\nvar _c;\n$RefreshReg$(_c, \"EditPostForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useHistory","postUpdated","selectPostsById","jsxDEV","_jsxDEV","EditPostForm","_ref","_s","match","postId","params","dispatch","history","post","state","posts","find","id","title","setTitle","content","setContent","onTitleChanged","e","target","value","onContentChanged","onSavePostClicked","push","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/posts/EditPostForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\nimport { postUpdated, selectPostsById } from './postsSlice'\n\nexport function EditPostForm({ match }) {\n  const { postId } = match.params\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const post = useSelector((state) =>\n    state.posts.find((post) => post.id === postId)\n  )\n\n  const [title, setTitle] = useState(post.title)\n  const [content, setContent] = useState(post.content)\n\n  const onTitleChanged = (e) => setTitle(e.target.value)\n  const onContentChanged = (e) => setContent(e.target.value)\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(\n        postUpdated({\n          id: postId,\n          title,\n          content,\n        })\n      )\n      history.push(`/posts/${postId}`)\n      setTitle('')\n      setContent('')\n    }\n  }\n\n  return (\n    <section>\n      <h2>Edit a post</h2>\n      <form>\n        <label htmlFor=\"postTitle\">post title</label>\n        <input\n          type=\"text\"\n          id=\"postTitle\"\n          name=\"postTitle\"\n          value={title}\n          onChange={onTitleChanged}\n        />\n\n        <label htmlFor=\"postTitle\">post content</label>\n        <input\n          type=\"text\"\n          id=\"postContent\"\n          name=\"postContent\"\n          value={content}\n          onChange={onContentChanged}\n        />\n\n        <button type=\"button\" onClick={onSavePostClicked}>\n          Save post\n        </button>\n      </form>\n    </section>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}