{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: '/fakeApi'\n  }),\n  tagTypes: ['Post'],\n  endpoints: builder => ({\n    getPosts: builder.query({\n      query: () => '/posts',\n      // providesTags: ['Post'], // save cache dengan tag post\n      providesTags: function () {\n        let result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        let error = arguments.length > 1 ? arguments[1] : undefined;\n        let arg = arguments.length > 2 ? arguments[2] : undefined;\n        return ['Post', ...result.map(_ref => {\n          let {\n            id\n          } = _ref;\n          return {\n            type: 'Post',\n            id\n          };\n        })];\n      }\n    }),\n    getPost: builder.query({\n      query: postId => `/posts/${postId}`,\n      providesTags: (result, error, arg) => [{\n        type: 'Post',\n        id: arg\n      }]\n    }),\n    addPost: builder.mutation({\n      query: initialPost => ({\n        url: '/posts',\n        method: 'POST',\n        body: initialPost\n      }),\n      invalidatesTags: ['Post'] // otomatis nambah post baru & re render component\n    }),\n\n    editPost: builder.mutation({\n      query: post => ({\n        url: `/posts/${post.id}`,\n        method: 'PATCH',\n        body: post\n      }),\n      invalidatesTags: (result, error, arg) => [{\n        type: 'Post'\n      }]\n    })\n  })\n});\nexport const {\n  useGetPostsQuery,\n  useGetPostQuery,\n  useAddPostMutation,\n  useEditPostMutation\n} = apiSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","apiSlice","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getPosts","query","providesTags","result","arguments","length","undefined","error","arg","map","_ref","id","type","getPost","postId","addPost","mutation","initialPost","url","method","body","invalidatesTags","editPost","post","useGetPostsQuery","useGetPostQuery","useAddPostMutation","useEditPostMutation"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/api/apiSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({ baseUrl: '/fakeApi' }),\n  tagTypes: ['Post'],\n  endpoints: (builder) => ({\n    getPosts: builder.query({\n      query: () => '/posts',\n      // providesTags: ['Post'], // save cache dengan tag post\n      providesTags: (result = [], error, arg) => [\n        'Post',\n        ...result.map(({ id }) => ({ type: 'Post', id })),\n      ],\n    }),\n    getPost: builder.query({\n      query: (postId) => `/posts/${postId}`,\n      providesTags: (result, error, arg) => [{ type: 'Post', id: arg }],\n    }),\n    addPost: builder.mutation({\n      query: (initialPost) => ({\n        url: '/posts',\n        method: 'POST',\n        body: initialPost,\n      }),\n      invalidatesTags: ['Post'], // otomatis nambah post baru & re render component\n    }),\n    editPost: builder.mutation({\n      query: (post) => ({\n        url: `/posts/${post.id}`,\n        method: 'PATCH',\n        body: post,\n      }),\n      invalidatesTags: (result, error, arg) => [{ type: 'Post' }],\n    }),\n  }),\n})\n\nexport const {\n  useGetPostsQuery,\n  useGetPostQuery,\n  useAddPostMutation,\n  useEditPostMutation,\n} = apiSlice\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,KAAK;EAClBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAW,CAAC,CAAC;EAClDC,QAAQ,EAAE,CAAC,MAAM,CAAC;EAClBC,SAAS,EAAGC,OAAO,KAAM;IACvBC,QAAQ,EAAED,OAAO,CAACE,KAAK,CAAC;MACtBA,KAAK,EAAEA,CAAA,KAAM,QAAQ;MACrB;MACAC,YAAY,EAAE,SAAAA,CAAA;QAAA,IAACC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;QAAA,IAAEG,KAAK,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;QAAA,IAAEE,GAAG,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;QAAA,OAAK,CACzC,MAAM,EACN,GAAGH,MAAM,CAACM,GAAG,CAACC,IAAA;UAAA,IAAC;YAAEC;UAAG,CAAC,GAAAD,IAAA;UAAA,OAAM;YAAEE,IAAI,EAAE,MAAM;YAAED;UAAG,CAAC;QAAA,CAAC,CAAC,CAClD;MAAA;IACH,CAAC,CAAC;IACFE,OAAO,EAAEd,OAAO,CAACE,KAAK,CAAC;MACrBA,KAAK,EAAGa,MAAM,IAAM,UAASA,MAAO,EAAC;MACrCZ,YAAY,EAAEA,CAACC,MAAM,EAAEI,KAAK,EAAEC,GAAG,KAAK,CAAC;QAAEI,IAAI,EAAE,MAAM;QAAED,EAAE,EAAEH;MAAI,CAAC;IAClE,CAAC,CAAC;IACFO,OAAO,EAAEhB,OAAO,CAACiB,QAAQ,CAAC;MACxBf,KAAK,EAAGgB,WAAW,KAAM;QACvBC,GAAG,EAAE,QAAQ;QACbC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC,CAAC;MACFI,eAAe,EAAE,CAAC,MAAM,CAAC,CAAE;IAC7B,CAAC,CAAC;;IACFC,QAAQ,EAAEvB,OAAO,CAACiB,QAAQ,CAAC;MACzBf,KAAK,EAAGsB,IAAI,KAAM;QAChBL,GAAG,EAAG,UAASK,IAAI,CAACZ,EAAG,EAAC;QACxBQ,MAAM,EAAE,OAAO;QACfC,IAAI,EAAEG;MACR,CAAC,CAAC;MACFF,eAAe,EAAEA,CAAClB,MAAM,EAAEI,KAAK,EAAEC,GAAG,KAAK,CAAC;QAAEI,IAAI,EAAE;MAAO,CAAC;IAC5D,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXY,gBAAgB;EAChBC,eAAe;EACfC,kBAAkB;EAClBC;AACF,CAAC,GAAGlC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}