{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { client } from '../../api/client';\nexport const fetchNotifications = createAsyncThunk('notifications/fetchNotifications', async (_, _ref) => {\n  let {\n    getState\n  } = _ref;\n  const allNotifications = selectAllNotifications(getState());\n  const [latestNotification] = allNotifications;\n  const latestTimestamp = latestNotification ? latestNotification.date : '';\n  const response = await client.get(`/fakeApi/notifications=${latestTimestamp}`);\n  console.log('ðŸš€ ~ file: notificationsSlice.js:14 ~ response:', response);\n  return response.data;\n});\nconst notificationsSlice = createSlice({\n  name: 'notifications',\n  initialState: [],\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(fetchNotifications.fulfilled, (state, action) => {\n      state.push(...action.payload);\n      state.sort((a, b) => b.date.localeCompare(a.date));\n    });\n  }\n});\nexport default notificationsSlice.reducer;\n\n// ! ini bisa dipakai di createAsyncThunk loh\nexport const selectAllNotifications = state => state.notifications;","map":{"version":3,"names":["createAsyncThunk","createSlice","client","fetchNotifications","_","_ref","getState","allNotifications","selectAllNotifications","latestNotification","latestTimestamp","date","response","get","console","log","data","notificationsSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","push","payload","sort","a","b","localeCompare","reducer","notifications"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/notifications/notificationsSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { client } from '../../api/client'\n\nexport const fetchNotifications = createAsyncThunk(\n  'notifications/fetchNotifications',\n  async (_, { getState }) => {\n    const allNotifications = selectAllNotifications(getState())\n\n    const [latestNotification] = allNotifications\n    const latestTimestamp = latestNotification ? latestNotification.date : ''\n\n    const response = await client.get(\n      `/fakeApi/notifications=${latestTimestamp}`\n    )\n    console.log('ðŸš€ ~ file: notificationsSlice.js:14 ~ response:', response)\n    return response.data\n  }\n)\n\nconst notificationsSlice = createSlice({\n  name: 'notifications',\n  initialState: [],\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(fetchNotifications.fulfilled, (state, action) => {\n      state.push(...action.payload)\n      state.sort((a, b) => b.date.localeCompare(a.date))\n    })\n  },\n})\n\nexport default notificationsSlice.reducer\n\n// ! ini bisa dipakai di createAsyncThunk loh\nexport const selectAllNotifications = (state) => state.notifications\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,MAAM,QAAQ,kBAAkB;AAEzC,OAAO,MAAMC,kBAAkB,GAAGH,gBAAgB,CAChD,kCAAkC,EAClC,OAAOI,CAAC,EAAAC,IAAA,KAAmB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,IAAA;EACpB,MAAME,gBAAgB,GAAGC,sBAAsB,CAACF,QAAQ,EAAE,CAAC;EAE3D,MAAM,CAACG,kBAAkB,CAAC,GAAGF,gBAAgB;EAC7C,MAAMG,eAAe,GAAGD,kBAAkB,GAAGA,kBAAkB,CAACE,IAAI,GAAG,EAAE;EAEzE,MAAMC,QAAQ,GAAG,MAAMV,MAAM,CAACW,GAAG,CAC9B,0BAAyBH,eAAgB,EAAC,CAC5C;EACDI,OAAO,CAACC,GAAG,CAAC,iDAAiD,EAAEH,QAAQ,CAAC;EACxE,OAAOA,QAAQ,CAACI,IAAI;AACtB,CAAC,CACF;AAED,MAAMC,kBAAkB,GAAGhB,WAAW,CAAC;EACrCiB,IAAI,EAAE,eAAe;EACrBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAaA,CAACC,OAAO,EAAE;IACrBA,OAAO,CAACC,OAAO,CAACpB,kBAAkB,CAACqB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/DD,KAAK,CAACE,IAAI,CAAC,GAAGD,MAAM,CAACE,OAAO,CAAC;MAC7BH,KAAK,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACpB,IAAI,CAACqB,aAAa,CAACF,CAAC,CAACnB,IAAI,CAAC,CAAC;IACpD,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAeM,kBAAkB,CAACgB,OAAO;;AAEzC;AACA,OAAO,MAAMzB,sBAAsB,GAAIiB,KAAK,IAAKA,KAAK,CAACS,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}