{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.XMLHttpRequestInterceptor = void 0;\nvar outvariant_1 = require(\"outvariant\");\nvar glossary_1 = require(\"../../glossary\");\nvar Interceptor_1 = require(\"../../Interceptor\");\nvar XMLHttpRequestOverride_1 = require(\"./XMLHttpRequestOverride\");\nvar XMLHttpRequestInterceptor = /** @class */function (_super) {\n  __extends(XMLHttpRequestInterceptor, _super);\n  function XMLHttpRequestInterceptor() {\n    return _super.call(this, XMLHttpRequestInterceptor.symbol) || this;\n  }\n  XMLHttpRequestInterceptor.prototype.checkEnvironment = function () {\n    return typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined';\n  };\n  XMLHttpRequestInterceptor.prototype.setup = function () {\n    var log = this.log.extend('setup');\n    log('patching \"XMLHttpRequest\" module...');\n    var PureXMLHttpRequest = window.XMLHttpRequest;\n    outvariant_1.invariant(!PureXMLHttpRequest[glossary_1.IS_PATCHED_MODULE], 'Failed to patch the \"XMLHttpRequest\" module: already patched.');\n    window.XMLHttpRequest = XMLHttpRequestOverride_1.createXMLHttpRequestOverride({\n      XMLHttpRequest: PureXMLHttpRequest,\n      emitter: this.emitter,\n      log: this.log\n    });\n    log('native \"XMLHttpRequest\" module patched!', window.XMLHttpRequest.name);\n    Object.defineProperty(window.XMLHttpRequest, glossary_1.IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(function () {\n      Object.defineProperty(window.XMLHttpRequest, glossary_1.IS_PATCHED_MODULE, {\n        value: undefined\n      });\n      window.XMLHttpRequest = PureXMLHttpRequest;\n      log('native \"XMLHttpRequest\" module restored!', window.XMLHttpRequest.name);\n    });\n  };\n  XMLHttpRequestInterceptor.symbol = Symbol('xhr');\n  return XMLHttpRequestInterceptor;\n}(Interceptor_1.Interceptor);\nexports.XMLHttpRequestInterceptor = XMLHttpRequestInterceptor;\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}