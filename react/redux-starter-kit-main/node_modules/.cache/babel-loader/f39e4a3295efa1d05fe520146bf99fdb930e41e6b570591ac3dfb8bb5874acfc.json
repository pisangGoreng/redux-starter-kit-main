{"ast":null,"code":"import { createSlice, createAsyncThunk, createEntityAdapter } from '@reduxjs/toolkit';\nimport { client } from '../../api/client';\nconst usersAdapter = createEntityAdapter();\nconst initialState = usersAdapter.getInitialState();\n// const initialState = []\n\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n  const response = await client.get('/fakeApi/users');\n  return response.data;\n});\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    // builder.addCase(fetchUsers.fulfilled, (state, action) => {\n    //   return action.payload\n    // })\n    builder.addCase(fetchUsers.fulfilled, usersAdapter.setAll);\n  }\n});\n\n// export const selectAllUsers = (state) => state.users\n\n// export const selectUsersById = (state, userId) => {\n//   return state.users.find((user) => user.id === userId)\n// }\n\nexport const {\n  selectAll: selectAllPosts,\n  selectById: selectPostsById\n} = usersAdapter.getSelectors(state => state.users);\nexport default usersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","createEntityAdapter","client","usersAdapter","initialState","getInitialState","fetchUsers","response","get","data","usersSlice","name","reducers","extraReducers","builder","addCase","fulfilled","setAll","selectAll","selectAllPosts","selectById","selectPostsById","getSelectors","state","users","reducer"],"sources":["/Users/endysantoso/Desktop/project/react/redux-starter-kit-main/src/features/users/usersSlice.js"],"sourcesContent":["import {\n  createSlice,\n  createAsyncThunk,\n  createEntityAdapter,\n} from '@reduxjs/toolkit'\nimport { client } from '../../api/client'\n\nconst usersAdapter = createEntityAdapter()\nconst initialState = usersAdapter.getInitialState()\n// const initialState = []\n\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n  const response = await client.get('/fakeApi/users')\n  return response.data\n})\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    // builder.addCase(fetchUsers.fulfilled, (state, action) => {\n    //   return action.payload\n    // })\n    builder.addCase(fetchUsers.fulfilled, usersAdapter.setAll)\n  },\n})\n\n// export const selectAllUsers = (state) => state.users\n\n// export const selectUsersById = (state, userId) => {\n//   return state.users.find((user) => user.id === userId)\n// }\n\nexport const { selectAll: selectAllPosts, selectById: selectPostsById } =\n  usersAdapter.getSelectors((state) => state.users)\n\nexport default usersSlice.reducer\n"],"mappings":"AAAA,SACEA,WAAW,EACXC,gBAAgB,EAChBC,mBAAmB,QACd,kBAAkB;AACzB,SAASC,MAAM,QAAQ,kBAAkB;AAEzC,MAAMC,YAAY,GAAGF,mBAAmB,EAAE;AAC1C,MAAMG,YAAY,GAAGD,YAAY,CAACE,eAAe,EAAE;AACnD;;AAEA,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAMO,QAAQ,GAAG,MAAML,MAAM,CAACM,GAAG,CAAC,gBAAgB,CAAC;EACnD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGX,WAAW,CAAC;EAC7BY,IAAI,EAAE,OAAO;EACbP,YAAY;EACZQ,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAaA,CAACC,OAAO,EAAE;IACrB;IACA;IACA;IACAA,OAAO,CAACC,OAAO,CAACT,UAAU,CAACU,SAAS,EAAEb,YAAY,CAACc,MAAM,CAAC;EAC5D;AACF,CAAC,CAAC;;AAEF;;AAEA;AACA;AACA;;AAEA,OAAO,MAAM;EAAEC,SAAS,EAAEC,cAAc;EAAEC,UAAU,EAAEC;AAAgB,CAAC,GACrElB,YAAY,CAACmB,YAAY,CAAEC,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;AAEnD,eAAed,UAAU,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}